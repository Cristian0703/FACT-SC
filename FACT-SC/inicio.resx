<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnFacturacion.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>